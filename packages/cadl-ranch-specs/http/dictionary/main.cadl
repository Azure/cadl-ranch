import "@cadl-lang/rest";
import "@azure-tools/cadl-ranch-expect";

using Cadl.Http;

@doc("Illustrates various of dictionaries.")
@scenarioService("/dictionary")
namespace Dictionary;

// TEMPLATES
@doc("Template type for testing dictionary with specific value type. Pass in the type of the value you are looking for")
model ModelValueTemplate<TProperty> {
  @doc("Property")
  property: Record<TProperty>;
}

@doc("Template to have models operations")
interface DictionaryOperations<TDict, TDoc extends string> {
  @scenario
  @scenarioDoc(
    """
  Expected dictionary response body:
  ```json
  {doc}
  ```
  """,
    {
      doc: TDoc,
    }
  )
  @get
  get(): TDict;

  @scenario
  @scenarioDoc(
    """
  Expected dictionary input body:
  ```json
  {doc}
  ```
  """,
    {
      doc: TDoc,
    }
  )
  @put
  put(@body body: TDict): OkResponse;
}

@doc("Dictionary of int32 values")
@route("/int32")
interface Int32Value extends DictionaryOperations<Record<int32>, "{'k1': 1, 'k2': 2}"> {}

@doc("Dictionary of int64 values")
@route("/int64")
interface Int64Value
  extends DictionaryOperations<Record<int64>, "{'k1': 0x7FFFFFFFFFFFFFFF, 'k2': -0x7FFFFFFFFFFFFFFF}"> {}

@doc("Dictionary of boolean values")
@route("/boolean")
interface BooleanValue extends DictionaryOperations<Record<boolean>, "{'k1': true, 'k2': false}"> {}

@doc("Dictionary of string values")
@route("/string")
interface StringValue extends DictionaryOperations<Record<string>, "{'k1': 'hello', 'k2': ''}"> {}

@doc("Dictionary of float values")
@route("/float32")
interface Float32Value extends DictionaryOperations<Record<float32>, "{'k1': 42.42}"> {}

@doc("Dictionary of datetime values")
@route("/datetime")
interface DatetimeValue extends DictionaryOperations<Record<zonedDateTime>, "{'k1': '2022-08-26T18:38:00Z'}"> {}

@doc("Dictionary of duration values")
@route("/duration")
interface DurationValue extends DictionaryOperations<Record<duration>, "{'k1': 'P123DT22H14M12.011S'}"> {}

@doc("Dictionary of unknown values")
@route("/unknown")
interface UnknownValue extends DictionaryOperations<Record<unknown>, "{'k1': 1, 'k2': 'hello', 'k3': null}"> {}

@doc("Dictionary inner model")
model InnerModel {
  @doc("Required string property")
  property: string;
  children?: Record<InnerModel>;
}

@doc("Dictionary of model values")
@route("/model")
interface ModelValue
  extends DictionaryOperations<Record<InnerModel>, "{'k1': {'property': 'hello'}, 'k2': {'property': 'world'}}"> {}

@doc("Dictionary of model values")
@route("/model/recursive")
interface RecursiveModelValue
  extends DictionaryOperations<
      Record<InnerModel>,
      "{'k1': {'property': 'hello', children: {}}, 'k2': {'property': 'world', children: {'k2.1': {'property': 'inner world'}}}}"
    > {}
