import "@cadl-lang/rest";
import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-ranch-expect";

using Cadl.Http;
using Cadl.Rest;
using Azure.Core.Foundations;

@doc("Illustrates models with optional properties.")
@scenarioService("/models/properties/optional")
namespace Models.Property.Optional;

@doc("Template type for testing models with optional property. Pass in the type of the property you are looking for")
model ModelTemplate<TProperty> {
  @doc("Property")
  property?: TProperty;
}

@doc("Operations associated with getting and putting models with optional properties.")
interface OperationsTemplate<TModel, TDoc extends string, TDefaultDoc extends string = "{}"> {
  @doc("Get models that will return all properties in the model")
  @scenario
  @scenarioDoc(
    """
  Expected response body:
  ```json
  {"property": {doc}}
  ```
  """,
    {
      allDoc: TDoc,
    }
  )
  @route("/all")
  @get
  getAll(): TModel | ErrorResponse;

  @doc("Get models that will return the default object")
  @scenario
  @scenarioDoc(
    """
  Expected response body:
  ```json
  {defaultDoc}
  ```
  """,
    {
      defaultDoc: TDefaultDoc,
    }
  )
  @route("/default")
  @get
  getDefault(): TModel | ErrorResponse;

  @doc("Put a body with all properties present.")
  @scenario
  @scenarioDoc(
    """
  Expected request body:
  ```json
  {allDoc}
  ```
  """,
    {
      allDoc: TDoc,
    }
  )
  @route("/all")
  @put
  putAll(@body body: TModel): void | ErrorResponse;

  @doc("Put a body with default properties.")
  @scenario
  @scenarioDoc(
    """
  Expected request body:
  ```json
  {defaultDoc}
  ```
  """,
    {
      defaultDoc: TDefaultDoc,
    }
  )
  @route("/default")
  @put
  putDefault(@body body: TModel): void | ErrorResponse;
}

// Model with optional string property
model StringProperty is ModelTemplate<string>;
@route("/string")
interface String extends OperationsTemplate<StringProperty, "hello"> {}

// Model with optional bytes property
model BytesProperty is ModelTemplate<bytes>;
@route("/bytes")
interface Bytes extends OperationsTemplate<BytesProperty, "aGVsbG8sIHdvcmxkIQ=="> {}

// Model with optional datetime property
@doc("Model with a datetime property")
model DatetimeProperty is ModelTemplate<zonedDateTime>;
@route("/datetime")
interface Datetime extends OperationsTemplate<DatetimeProperty, "2022-08-26T18:38:00Z"> {}

// Model with optional duration property
@doc("Model with a duration property")
model DurationProperty is ModelTemplate<zonedDateTime>;
@route("/duration")
interface Duration extends OperationsTemplate<DurationProperty, "P123DT22H14M12.011S"> {}

// Model with optional collection bytes property
@doc("Model with collection bytes properties")
model CollectionsByteProperty is ModelTemplate<bytes[]>;
@route("/collections/bytes")
interface CollectionsByte
  extends OperationsTemplate<CollectionsByteProperty, "[aGVsbG8sIHdvcmxkIQ==, aGVsbG8sIHdvcmxkIQ==]"> {}
