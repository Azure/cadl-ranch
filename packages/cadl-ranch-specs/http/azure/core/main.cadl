import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-ranch-expect";
import "@cadl-lang/rest";
import "@cadl-lang/versioning";

using Azure.Core;
using global.Azure.Core.Traits;
using Cadl.Rest;
using Cadl.Http;
using Cadl.Versioning;

#suppress "@azure-tools/cadl-azure-core/casing-style" "For spec"
@doc("Illustrates bodies templated with Azure Core")
@scenarioService("/azure/core")
@versioned(_Specs_.Azure.Core.Versions)
namespace _Specs_.Azure.Core;

enum Versions {
  @useDependency(global.Azure.Core.Versions.v1_0_Preview_2)
  v2022_12_01_preview: "2022-12-01-preview",
}

interface ResourceOperations
  extends global.Azure.Core.ResourceOperations<NoConditionalRequests & NoRepeatableRequests & NoClientRequestId> {}

@resource("users")
@doc("Details about a user.")
model User {
  @key
  @doc("The user's id.")
  @visibility("read")
  id: int32;

  @doc("The user's name.")
  name: string;
}

@doc("The parameters for exporting a user.")
model UserExportParams {
  @query
  @doc("The format of the data.")
  format: string;
}

@scenario
@doc("Creates or updates a User")
@summary("Adds a user or updates a user's fields.")
@scenarioDoc("""
Should only generate one model named User.

Expected path parameter: id=1
Expected query parameter: api-version=2022-12-01-preview

Expected input body:
```json
{
  "name": "Madge"
}
```

Expected response body:
```json
{
  "id": 1,
  "name": "Madge"
}
```
""")
op createOrUpdate is ResourceOperations.ResourceCreateOrUpdate<User>;

@scenario
@doc("Creates or repalces a User")
@summary("Adds a user or repalces a user's fields.")
@scenarioDoc("""
Should only generate one model named User.

Expected path parameter: id=1
Expected query parameter: api-version=2022-12-01-preview

Expected input body:
```json
{
  "name": "Madge"
}
```

Expected response body:
```json
{
  "id": 1,
  "name": "Madge"
}
```
""")
op createOrReplace is ResourceOperations.ResourceCreateOrReplace<User>;

@scenario
@doc("Gets a User")
@summary("Gets a user.")
@scenarioDoc("""
Should only generate one model named User.

Expected path parameter: id=1
Expected query parameter: api-version=2022-12-01-preview

Expected response body:
```json
{
  "id": 1,
  "name": "Madge"
}
```
""")
op get is ResourceOperations.ResourceRead<User>;

@scenario
@doc("Lists all Users")
@summary("Lists all users.")
@scenarioDoc("""
Should only generate one model named User.

Should not generate visible model like CustomPage.

Expected query parameter: api-version=2022-12-01-preview

Expected response body:
```json
{
  "value":[
     {
        "id":1,
        "name":"Madge"
     },
     {
        "id":2,
        "name":"John"
     }
  ]
}
```
""")
op list is ResourceOperations.ResourceList<User>;

@scenario
@doc("Deletes a User")
@summary("Deletes a user.")
@scenarioDoc("""
Expected path parameter: id=1

Expected query parameter: api-version=2022-12-01-preview

Expected response of status code 204 with empty body.
""")
op delete is ResourceOperations.ResourceDelete<User>;

@scenario
@doc("Exports a User")
@summary("Exports a user.")
@scenarioDoc("""
Should only generate one model named User.

Expected path parameter: id=1
Expected query parameter: format=json
Expected query parameter: api-version=2022-12-01-preview

Expected response body:
```json
{
  "id": 1,
  "name": "Madge"
}
```
""")
op export is ResourceOperations.ResourceAction<User, UserExportParams, User>;
