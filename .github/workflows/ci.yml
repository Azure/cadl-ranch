name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch: {}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  check-changes:
    name: Check Changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 ## Needed for Changesets to find `main` branch

      - run: git pull --force --no-tags origin main:main
        name: Get main ref

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - run: npx -p @changesets/cli changeset status --since=main
        name: Check changelog
        if: ${{ !startsWith(github.head_ref, 'publish/') }}

  # Build on linux and windows
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    name: Build And Test (latest)
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm install -g pnpm@7.27.1
        name: Install PNPM

      - run: pnpm install
        name: Install dependencies

      - run: pnpm check-version-mismatch
        name: Check dependencies are consistent

      - run: pnpm run build
        name: Build

      - run: pnpm run validate-scenarios --debug
        name: Validate Scenarios

      - run: pnpm run validate-mock-apis --debug
        name: Validate mock apis

      - run: pnpm run generate-scenarios-summary --debug
        name: Generate scenario summary

      - run: pnpm run check-format
        name: Check formatting

      - run: pnpm run lint
        name: Lint

      - run: |
          git status --porcelain
          git diff --no-ext-diff --quiet --exit-code
        name: Check not out of date generated files

  # build-dev:
  #   name: Build And Test (-dev.x)
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest

  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}

  #     - run: npm install -g pnpm@7.27.1
  #       name: Install PNPM

  #     # Install deps and build the bump package first
  #     # - run: pnpm install
  #     #   name: Install dependencies

  #     # - run: npm run build
  #     #   name: Build
  #     #   working-directory: ./typespec-bump-deps

  #     - run: npx -y @azure-tools/typespec-bump-deps@latest ./packages/cadl-ranch-specs/package.json ./packages/cadl-ranch/package.json ./packages/cadl-ranch-expect/package.json
  #       name: Bump package versions

  #     - run: pnpm install --no-frozen-lockfile
  #       name: Install dependencies

  #     - run: pnpm run build
  #       name: Build

  #     - run: pnpm run validate-scenarios --debug
  #       name: Validate Scenarios

  #     - run: pnpm run validate-mock-apis --debug
  #       name: Validate mock apis

  #     - run: pnpm run generate-scenarios-summary --debug
  #       name: Generate scenario summary

  #     - run: |
  #         git status --porcelain
  #         git diff --no-ext-diff --quiet --exit-code -- ':!**/package.json' ':!pnpm-lock.yaml'
  #       name: Check not out of date generated files
